var request = require('request')
  , indico = module.exports

var headers = {
  'Content-type': 'application/json', 
  'Accept': 'text/plain'
};

var services = [
  'political',
  'sentiment',
  'language',
  'facialFeatures',
  'fer',
  'imageFeatures',
  'textTags'
];


var api_endpoints = {
  'local': 'http://localhost:9438/',
  'remote': 'http://apiv1.indico.io/'
}

function service(name, server) {
  return api_endpoints[server] + name.toLowerCase();
}

var api_request = function(api, server) {
  return function(data, parameters, fn) {

    if (arguments.length == 2) {
      // No authorization keys passed
      var auth = "";
      var fn = arguments[1];
    } else if (arguments.length == 3) {
      // Auth keys passed, format as HTTP Basic Auth
      var auth = arguments[1]; 
      var fn = arguments[2];
      var encoded_auth = new Buffer(auth.username + ":" + auth.password).toString("base64");
      headers['Authorization'] = "Basic " + encoded_auth;
    }

    var body = {};
    body['data'] = data;

    var options = {
      method: 'POST',
      url: service(api, server),
      headers: headers,
      body: JSON.stringify(body)
    };
    
    fn = fn || function() {};

    request(options, function(err, res, body) {
      if (err) {
        fn(err);
        return;
      }
      
      if (res.statusCode !== 200) {
        fn(body);
        return;
      }
      
      fn(null, JSON.parse(body).results);
    });
        
    return this;
  };
}

String.prototype.capitalize = function() {
    return this.charAt(0).toUpperCase() + this.slice(1);
}

String.prototype.snakeCase = function() {
  return this.replace(/([A-Z])/g, function($1){return "_"+$1.toLowerCase();});
}

indico.local = {}
services.forEach(function(api) {
  indico[api] = api_request(api, 'remote');
  indico['batch' + api.capitalize()] = api_request(api + '/batch', 'remote');
  indico.local[api] = api_request(api, 'local');
  indico.local['batch' + api.capitalize()] = api_request(api + '/batch', 'local');

  // camelCase + snake_case + lowercase supported
  for (api in indico) {
    indico[api.snakeCase()] = indico[api];
    indico[api.toLowerCase()] = indico[api];
  }

  for (api in indico.local) {
    indico.local[api.snakeCase()] = indico.local[api];
    indico.local[api.toLowerCase()] = indico.local[api];
  }
  
});

indico.posneg = indico.sentiment;
